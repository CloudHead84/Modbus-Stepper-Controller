VAR_INPUT
	I_rUnitsPerTurn		: REAL := 1; // user units (mm, deg, perc) per turn
	I_iFullSteps		: INT := 200; // fullsteps per turn
	I_iMicrostepping	: INT := 1; // microstepping x 1/2/4/8/16/32 supported
// Hardware	
	HW_I_xLifeBitFB		: BOOL;
	HW_I_xPowered		: BOOL;
	HW_I_xRunning		: BOOL;
	HW_I_wActualPosition: WORD;
	HW_I_wActualSpeed	: WORD;
	HW_I_wCheckSum		: WORD;

END_VAR
VAR_OUTPUT
	HW_Q_xLifeBit		: BOOL;
	HW_Q_xPowerOnReq	: BOOL;
	HW_Q_xStartReq		: BOOL;
	HW_Q_xStopReq		: BOOL;	
	HW_Q_wModeReq		: WORD;
	HW_Q_wTargetPosition: WORD;
	HW_Q_wTargetSpeed	: WORD;
	HW_Q_wTargetAcc		: WORD;
	HW_Q_wTargetDec		: WORD;	
END_VAR
VAR
	rMicroStepsPerTurn	: REAL;
	rGearRatio			: REAL;
END_VAR
VAR_IN_OUT
	Axis : Axis_Ref;
END_VAR


rMicroStepsPerTurn := INT_TO_REAL(I_iFullSteps * I_iMicrostepping);


// Lifebit
HW_Q_xLifeBit := NOT HW_I_xLifeBitFB;


// Power
HW_Q_xPowerOnReq := axis.OUT_xPowerOnReq;
axis.IN_xPowered := HW_I_xPowered;


// start and running
HW_Q_xStartReq	:= axis.OUT_xStartReq;
HW_Q_xStopReq	:= axis.OUT_xStopReq;
axis.IN_xRunning := HW_I_xRunning;
